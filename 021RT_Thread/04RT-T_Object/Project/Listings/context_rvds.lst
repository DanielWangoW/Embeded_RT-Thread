


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ******************
    2 00000000         ;                                 »´æ÷±‰¡ø
    3 00000000         ;*******************************************************
                       ******************
    4 00000000                 IMPORT           rt_thread_switch_interrupt_flag
    5 00000000                 IMPORT           rt_interrupt_from_thread
    6 00000000                 IMPORT           rt_interrupt_to_thread
    7 00000000         
    8 00000000         ;*******************************************************
                       ******************
    9 00000000         ;                                 ≥£¡ø
   10 00000000         ;*******************************************************
                       ******************
   11 00000000         ;-------------------------------------------------------
                       ------------------
   12 00000000         ;”–πÿƒ⁄∫ÀÕ‚…Ëºƒ¥Ê∆˜∂®“Âø…≤ŒøºπŸ∑ΩŒƒµµ£∫STM32F10xxx Corte
                       x-M3 programming manual
   13 00000000         ;œµÕ≥øÿ÷∆øÈÕ‚…ËSCBµÿ÷∑∑∂Œß£∫0xE000ED00-0xE000ED3F
   14 00000000         ;-------------------------------------------------------
                       ------------------
   15 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0xE000ED08  ; œÚ¡ø±Ì∆´“∆ºƒ¥Ê∆˜
   16 00000000 E000ED04 
                       NVIC_INT_CTRL
                               EQU              0xE000ED04  ; ÷–∂œøÿ÷∆◊¥Ã¨ºƒ¥Ê∆
                                                            ˜
   17 00000000 E000ED20 
                       NVIC_SYSPRI2
                               EQU              0xE000ED20  ; œµÕ≥”≈œ»º∂ºƒ¥Ê∆˜(
                                                            2)
   18 00000000 00FF0000 
                       NVIC_PENDSV_PRI
                               EQU              0x00FF0000  ; PendSV ”≈œ»º∂÷µ (
                                                            lowest)
   19 00000000 10000000 
                       NVIC_PENDSVSET
                               EQU              0x10000000  ; ¥•∑¢PendSV except
                                                            ionµƒ÷µ
   20 00000000         
   21 00000000         ;*******************************************************
                       ******************
   22 00000000         ;                              ¥˙¬Î≤˙…˙÷∏¡Ó
   23 00000000         ;*******************************************************
                       ******************
   24 00000000         
   25 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   26 00000000                 THUMB
   27 00000000                 REQUIRE8
   28 00000000                 PRESERVE8
   29 00000000         
   30 00000000         
   31 00000000         ;/*
   32 00000000         ; *-----------------------------------------------------
                       ------------------
   33 00000000         ; * ∫Ø ˝‘≠–Õ£∫void rt_hw_context_switch_to(rt_uint32 to)
                       ;



ARM Macro Assembler    Page 2 


   34 00000000         ; * r0 --> to
   35 00000000         ; * ∏√∫Ø ˝”√”⁄ø™∆Ùµ⁄“ª¥Œœﬂ≥Ã«–ªª
   36 00000000         ; *-----------------------------------------------------
                       ------------------
   37 00000000         ; */
   38 00000000         
   39 00000000         rt_hw_context_switch_to
                               PROC
   40 00000000         
   41 00000000         ; µº≥ˆrt_hw_context_switch_to£¨»√∆‰æﬂ”–»´æ÷ Ù–‘£¨ø…“‘‘⁄C
                       Œƒº˛µ˜”√
   42 00000000                 EXPORT           rt_hw_context_switch_to
   43 00000000         
   44 00000000         ; …Ë÷√rt_interrupt_to_threadµƒ÷µ
   45 00000000 4926            LDR              r1, =rt_interrupt_to_thread ;Ω´
                                                            rt_interrupt_to_thr
                                                            eadµƒµÿ÷∑º”‘ÿµΩr1
   46 00000002 6008            STR              r0, [r1]    ;Ω´r0µƒ÷µ¥Ê¥¢µΩrt_i
                                                            nterrupt_to_thread
   47 00000004         
   48 00000004         ; …Ë÷√rt_interrupt_from_threadµƒ÷µŒ™0£¨±Ì æ∆Ù∂Øµ⁄“ª¥Œœﬂ≥
                       Ã«–ªª
   49 00000004 4926            LDR              r1, =rt_interrupt_from_thread ;
                                                            Ω´rt_interrupt_from
                                                            _threadµƒµÿ÷∑º”‘ÿµΩ
                                                            r1
   50 00000006 F04F 0000       MOV              r0, #0x0    ;≈‰÷√r0µ»”⁄0
   51 0000000A 6008            STR              r0, [r1]    ;Ω´r0µƒ÷µ¥Ê¥¢µΩrt_i
                                                            nterrupt_from_threa
                                                            d
   52 0000000C         
   53 0000000C         ; …Ë÷√÷–∂œ±Í÷æŒªrt_thread_switch_interrupt_flagµƒ÷µŒ™1
   54 0000000C 4925            LDR              r1, =rt_thread_switch_interrupt
_flag 
                                                            ;Ω´rt_thread_switch
                                                            _interrupt_flagµƒµÿ
                                                            ÷∑º”‘ÿµΩr1
   55 0000000E F04F 0001       MOV              r0, #1      ;≈‰÷√r0µ»”⁄1
   56 00000012 6008            STR              r0, [r1]    ;Ω´r0µƒ÷µ¥Ê¥¢µΩrt_t
                                                            hread_switch_interr
                                                            upt_flag
   57 00000014         
   58 00000014         ; …Ë÷√ PendSV “Ï≥£µƒ”≈œ»º∂
   59 00000014 4824            LDR              r0, =NVIC_SYSPRI2
   60 00000016 F44F 017F       LDR              r1, =NVIC_PENDSV_PRI
   61 0000001A F8D0 2000       LDR.W            r2, [r0,#0x00] ; ∂¡
   62 0000001E EA41 0102       ORR              r1,r1,r2    ; ∏ƒ
   63 00000022 6001            STR              r1, [r0]    ; –¥
   64 00000024         
   65 00000024         ; ¥•∑¢ PendSV “Ï≥£ (≤˙…˙…œœ¬Œƒ«–ªª)
   66 00000024 4821            LDR              r0, =NVIC_INT_CTRL
   67 00000026 F04F 5180       LDR              r1, =NVIC_PENDSVSET
   68 0000002A 6001            STR              r1, [r0]
   69 0000002C         
   70 0000002C         ; ø™÷–∂œ
   71 0000002C B661            CPSIE            F
   72 0000002E B662            CPSIE            I
   73 00000030         
   74 00000030         ; ”¿‘∂≤ªª·µΩ¥Ô’‚¿Ô



ARM Macro Assembler    Page 3 


   75 00000030                 ENDP
   76 00000030         
   77 00000030         
   78 00000030         
   79 00000030         
   80 00000030         ;/*
   81 00000030         ; *-----------------------------------------------------
                       ------------------
   82 00000030         ; * void rt_hw_interrupt_disable();
   83 00000030         ; *-----------------------------------------------------
                       ------------------
   84 00000030         ; */
   85 00000030         rt_hw_interrupt_disable
                               PROC
   86 00000030                 EXPORT           rt_hw_interrupt_disable
   87 00000030 F3EF 8010       MRS              r0, PRIMASK
   88 00000034 B672            CPSID            I
   89 00000036 4770            BX               LR
   90 00000038                 ENDP
   91 00000038         
   92 00000038         
   93 00000038         ;/*
   94 00000038         ; *-----------------------------------------------------
                       ------------------
   95 00000038         ; * void rt_hw_interrupt_enable();
   96 00000038         ; *-----------------------------------------------------
                       ------------------
   97 00000038         ; */
   98 00000038         rt_hw_interrupt_enable
                               PROC
   99 00000038                 EXPORT           rt_hw_interrupt_enable
  100 00000038 F380 8810       MSR              PRIMASK,r0
  101 0000003C 4770            BX               LR
  102 0000003E                 ENDP
  103 0000003E         
  104 0000003E         
  105 0000003E         ;/*
  106 0000003E         ; *-----------------------------------------------------
                       ------------------
  107 0000003E         ; * void rt_hw_context_switch(rt_uint32 from, rt_uint32 
                       to);
  108 0000003E         ; * r0 --> from
  109 0000003E         ; * r1 --> to
  110 0000003E         ; *-----------------------------------------------------
                       ------------------
  111 0000003E         ; */
  112 0000003E         ;rt_hw_context_switch_interrupt
  113 0000003E         ;EXPORT rt_hw_context_switch_interrupt
  114 0000003E         
  115 0000003E         rt_hw_context_switch
                               PROC
  116 0000003E                 EXPORT           rt_hw_context_switch
  117 0000003E         
  118 0000003E         ; …Ë÷√÷–∂œ±Í÷æŒªrt_thread_switch_interrupt_flagŒ™1     
  119 0000003E 4A19            LDR              r2, =rt_thread_switch_interrupt
_flag 
                                                            ; º”‘ÿrt_thread_swi
                                                            tch_interrupt_flagµ
                                                            ƒµÿ÷∑µΩr2



ARM Macro Assembler    Page 4 


  120 00000040 6813            LDR              r3, [r2]    ; º”‘ÿrt_thread_swi
                                                            tch_interrupt_flagµ
                                                            ƒ÷µµΩr3
  121 00000042 2B01            CMP              r3, #1      ; r3”Î1±»Ωœ£¨œ‡µ»‘Ú
                                                            ÷¥––BEQ÷∏¡Ó£¨∑Ò‘Ú≤ª
                                                            ÷¥––
  122 00000044 D004            BEQ              _reswitch
  123 00000046 F04F 0301       MOV              r3, #1      ; …Ë÷√r3µƒ÷µŒ™1
  124 0000004A 6013            STR              r3, [r2]    ; Ω´r3µƒ÷µ¥Ê¥¢µΩrt_
                                                            thread_switch_inter
                                                            rupt_flag£¨º¥÷√1
  125 0000004C         
  126 0000004C         ; …Ë÷√rt_interrupt_from_threadµƒ÷µ
  127 0000004C 4A14            LDR              r2, =rt_interrupt_from_thread ;
                                                             º”‘ÿrt_interrupt_f
                                                            rom_threadµƒµÿ÷∑µΩr
                                                            2
  128 0000004E 6010            STR              r0, [r2]    ; ¥Ê¥¢r0µƒ÷µµΩrt_in
                                                            terrupt_from_thread
                                                            £¨º¥…œ“ª∏ˆœﬂ≥Ã’ª÷∏’
                                                            Îspµƒ÷∏’Î
  129 00000050         
  130 00000050         _reswitch
  131 00000050         ; …Ë÷√rt_interrupt_to_threadµƒ÷µ
  132 00000050 4A12            LDR              r2, =rt_interrupt_to_thread ; º
                                                            ”‘ÿrt_interrupt_fro
                                                            m_threadµƒµÿ÷∑µΩr2
  133 00000052 6011            STR              r1, [r2]    ; ¥Ê¥¢r1µƒ÷µµΩrt_in
                                                            terrupt_from_thread
                                                            £¨º¥œ¬“ª∏ˆœﬂ≥Ã’ª÷∏’
                                                            Îspµƒ÷∏’Î
  134 00000054         
  135 00000054         ; ¥•∑¢PendSV“Ï≥££¨ µœ÷…œœ¬Œƒ«–ªª
  136 00000054 4815            LDR              r0, =NVIC_INT_CTRL
  137 00000056 F04F 5180       LDR              r1, =NVIC_PENDSVSET
  138 0000005A 6001            STR              r1, [r0]
  139 0000005C         
  140 0000005C         ; ◊”≥Ã–Ú∑µªÿ
  141 0000005C 4770            BX               LR
  142 0000005E         
  143 0000005E         ; ◊”≥Ã–ÚΩ· ¯
  144 0000005E                 ENDP
  145 0000005E         
  146 0000005E         
  147 0000005E         ;/*
  148 0000005E         ; *-----------------------------------------------------
                       ------------------
  149 0000005E         ; * void PendSV_Handler(void);
  150 0000005E         ; * r0 --> switch from thread stack
  151 0000005E         ; * r1 --> switch to thread stack
  152 0000005E         ; * psr, pc, lr, r12, r3, r2, r1, r0 are pushed into [fr
                       om] stack
  153 0000005E         ; *-----------------------------------------------------
                       ------------------
  154 0000005E         ; */
  155 0000005E         
  156 0000005E         PendSV_Handler
                               PROC
  157 0000005E                 EXPORT           PendSV_Handler



ARM Macro Assembler    Page 5 


  158 0000005E         
  159 0000005E         ;  ßƒ‹÷–∂œ£¨Œ™¡À±£ª§…œœ¬Œƒ«–ªª≤ª±ª÷–∂œ
  160 0000005E F3EF 8210       MRS              r2, PRIMASK
  161 00000062 B672            CPSID            I
  162 00000064         
  163 00000064         ; ªÒ»°÷–∂œ±Í÷æŒª£¨ø¥ø¥ «∑ÒŒ™0
  164 00000064 480F            LDR              r0, =rt_thread_switch_interrupt
_flag 
                                                            ; º”‘ÿrt_thread_swi
                                                            tch_interrupt_flagµ
                                                            ƒµÿ÷∑µΩr0
  165 00000066 6801            LDR              r1, [r0]    ; º”‘ÿrt_thread_swi
                                                            tch_interrupt_flagµ
                                                            ƒ÷µµΩr1
  166 00000068 B191            CBZ              r1, pendsv_exit ; ≈–∂œr1 «∑ÒŒ™0
                                                            £¨Œ™0‘ÚÃ¯◊™µΩpendsv
                                                            _exit
  167 0000006A         
  168 0000006A         ; r1≤ªŒ™0‘Ú«Â0
  169 0000006A F04F 0100       MOV              r1, #0x00
  170 0000006E 6001            STR              r1, [r0]    ; Ω´r1µƒ÷µ¥Ê¥¢µΩrt_
                                                            thread_switch_inter
                                                            rupt_flag£¨º¥«Â0
  171 00000070         
  172 00000070         ; ≈–∂œrt_interrupt_from_threadµƒ÷µ «∑ÒŒ™0
  173 00000070 480B            LDR              r0, =rt_interrupt_from_thread ;
                                                             º”‘ÿrt_interrupt_f
                                                            rom_threadµƒµÿ÷∑µΩr
                                                            0
  174 00000072 6801            LDR              r1, [r0]    ; º”‘ÿrt_interrupt_
                                                            from_threadµƒ÷µµΩr1
                                                            
  175 00000074 B129            CBZ              r1, switch_to_thread ; ≈–∂œr1 «
                                                            ∑ÒŒ™0£¨Œ™0‘ÚÃ¯◊™µΩs
                                                            witch_to_thread
  176 00000076         ; µ⁄“ª¥Œœﬂ≥Ã«–ªª ±rt_interrupt_from_threadøœ∂®Œ™0£¨‘ÚÃ¯◊
                       ™µΩswitch_to_thread
  177 00000076         
  178 00000076         ; ========================== …œŒƒ±£¥Ê ==================
                       ============
  179 00000076         ; µ±Ω¯»ÎPendSVC Handler ±£¨…œ“ª∏ˆœﬂ≥Ã‘À––µƒª∑æ≥º¥£∫
  180 00000076         ; xPSR£¨PC£®œﬂ≥Ã»Îø⁄µÿ÷∑£©£¨R14£¨R12£¨R3£¨R2£¨R1£¨R0£®œﬂ
                       ≥Ãµƒ–Œ≤Œ£©
  181 00000076         ; ’‚–©CPUºƒ¥Ê∆˜µƒ÷µª·◊‘∂Ø±£¥ÊµΩœﬂ≥Ãµƒ’ª÷–£¨ £œ¬µƒr4~r11–
                       Ë“™ ÷∂Ø±£¥Ê
  182 00000076         
  183 00000076         
  184 00000076 F3EF 8109       MRS              r1, psp     ; ªÒ»°œﬂ≥Ã’ª÷∏’ÎµΩr
                                                            1
  185 0000007A E921 0FF0       STMFD            r1!, {r4 - r11} ;Ω´CPUºƒ¥Ê∆˜r4~
                                                            r11µƒ÷µ¥Ê¥¢µΩr1÷∏œÚ
                                                            µƒµÿ÷∑(√ø≤Ÿ◊˜“ª¥Œµÿ
                                                            ÷∑Ω´µ›ºı“ª¥Œ)
  186 0000007E 6800            LDR              r0, [r0]    ; º”‘ÿr0÷∏œÚ÷µµΩr0£
                                                            ¨º¥r0=rt_interrupt_
                                                            from_thread
  187 00000080 6001            STR              r1, [r0]    ; Ω´r1µƒ÷µ¥Ê¥¢µΩr0£
                                                            ¨º¥∏¸–¬œﬂ≥Ã’ªsp
  188 00000082         



ARM Macro Assembler    Page 6 


  189 00000082         ; ========================== œ¬Œƒ«–ªª ==================
                       ============
  190 00000082         switch_to_thread
  191 00000082 4906            LDR              r1, =rt_interrupt_to_thread ; º
                                                            ”‘ÿrt_interrupt_to_
                                                            threadµƒµÿ÷∑µΩr1
  192 00000084         ; rt_interrupt_to_thread «“ª∏ˆ»´æ÷±‰¡ø£¨¿Ô√Ê¥Êµƒ «œﬂ≥Ã’ª
                       ÷∏’ÎSPµƒ÷∏’Î
  193 00000084 6809            LDR              r1, [r1]    ; º”‘ÿrt_interrupt_
                                                            to_threadµƒ÷µµΩr1£¨
                                                            º¥sp÷∏’Îµƒ÷∏’Î
  194 00000086 6809            LDR              r1, [r1]    ; º”‘ÿrt_interrupt_
                                                            to_threadµƒ÷µµΩr1£¨
                                                            º¥sp
  195 00000088         
  196 00000088 E8B1 0FF0       LDMFD            r1!, {r4 - r11} ;Ω´œﬂ≥Ã’ª÷∏’Îr1
                                                            (≤Ÿ◊˜÷Æ«∞œ»µ›ºı)÷∏œ
                                                            Úµƒƒ⁄»›º”‘ÿµΩCPUºƒ¥
                                                            Ê∆˜r4~r11
  197 0000008C F381 8809       MSR              psp, r1     ;Ω´œﬂ≥Ã’ª÷∏’Î∏¸–¬µΩ
                                                            PSP
  198 00000090         
  199 00000090         pendsv_exit
  200 00000090         ; ª÷∏¥÷–∂œ
  201 00000090 F382 8810       MSR              PRIMASK, r2
  202 00000094         
  203 00000094 F04E 0E04       ORR              lr, lr, #0x04 ; »∑±£“Ï≥£∑µªÿ π”
                                                            √µƒ∂—’ª÷∏’Î «PSP£¨º
                                                            ¥LRºƒ¥Ê∆˜µƒŒª2“™Œ™1
                                                            
  204 00000098 4770            BX               lr          ; “Ï≥£∑µªÿ£¨’‚∏ˆ ±∫
                                                            Ú»ŒŒÒ∂—’ª÷–µƒ £œ¬ƒ⁄
                                                            »›Ω´ª·◊‘∂Øº”‘ÿµΩxPS
                                                            R£¨PC£®»ŒŒÒ»Îø⁄µÿ÷∑
                                                            £©£¨R14£¨R12£¨R3£¨R
                                                            2£¨R1£¨R0£®»ŒŒÒµƒ–Œ
                                                            ≤Œ£©
  205 0000009A         ; Õ¨ ±PSPµƒ÷µ“≤Ω´∏¸–¬£¨º¥÷∏œÚ»ŒŒÒ∂—’ªµƒ’ª∂•°£‘⁄ARMC3÷–£¨
                       ∂— «”…∏ﬂµÿ÷∑œÚµÕµÿ÷∑…˙≥§µƒ°£
  206 0000009A         ; PendSV_Handler ◊”≥Ã–ÚΩ· ¯
  207 0000009A                 ENDP
  208 0000009A         
  209 0000009A         
  210 0000009A 00 00           ALIGN            4
  211 0000009C         
  212 0000009C                 END
              00000000 
              00000000 
              00000000 
              E000ED20 
              E000ED04 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\context_rvds.d -o.\objects\context_rvds.o -I.\RTE\_Targe
t_1 -IC:\Users\◊øµ¿“Ω¡∆\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Incl
ude -IC:\Users\◊øµ¿“Ω¡∆\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device
\Include --predefine="__UVISION_VERSION SETA 530" --predefine="_RTE_ SETA 1" --
predefine="STM32F10X_HD SETA 1" --predefine="_RTE_ SETA 1" --list=.\listings\co
ntext_rvds.lst ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvds.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 25 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvd
s.s
   Uses
      None
Comment: .text unused
PendSV_Handler 0000005E

Symbol: PendSV_Handler
   Definitions
      At line 156 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rv
ds.s
   Uses
      At line 157 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rv
ds.s
Comment: PendSV_Handler used once
_reswitch 00000050

Symbol: _reswitch
   Definitions
      At line 130 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rv
ds.s
   Uses
      At line 122 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rv
ds.s
Comment: _reswitch used once
pendsv_exit 00000090

Symbol: pendsv_exit
   Definitions
      At line 199 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rv
ds.s
   Uses
      At line 166 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rv
ds.s
Comment: pendsv_exit used once
rt_hw_context_switch 0000003E

Symbol: rt_hw_context_switch
   Definitions
      At line 115 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rv
ds.s
   Uses
      At line 116 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rv
ds.s
Comment: rt_hw_context_switch used once
rt_hw_context_switch_to 00000000

Symbol: rt_hw_context_switch_to
   Definitions
      At line 39 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvd
s.s
   Uses
      At line 42 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvd
s.s
Comment: rt_hw_context_switch_to used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

rt_hw_interrupt_disable 00000030

Symbol: rt_hw_interrupt_disable
   Definitions
      At line 85 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvd
s.s
   Uses
      At line 86 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvd
s.s
Comment: rt_hw_interrupt_disable used once
rt_hw_interrupt_enable 00000038

Symbol: rt_hw_interrupt_enable
   Definitions
      At line 98 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvd
s.s
   Uses
      At line 99 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvd
s.s
Comment: rt_hw_interrupt_enable used once
switch_to_thread 00000082

Symbol: switch_to_thread
   Definitions
      At line 190 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rv
ds.s
   Uses
      At line 175 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rv
ds.s
Comment: switch_to_thread used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 16 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvd
s.s
   Uses
      At line 66 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvd
s.s
      At line 136 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rv
ds.s

NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 19 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvd
s.s
   Uses
      At line 67 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvd
s.s
      At line 137 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rv
ds.s

NVIC_PENDSV_PRI 00FF0000

Symbol: NVIC_PENDSV_PRI
   Definitions
      At line 18 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvd
s.s
   Uses
      At line 60 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvd
s.s
Comment: NVIC_PENDSV_PRI used once
NVIC_SYSPRI2 E000ED20

Symbol: NVIC_SYSPRI2
   Definitions
      At line 17 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvd
s.s
   Uses
      At line 59 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvd
s.s
Comment: NVIC_SYSPRI2 used once
SCB_VTOR E000ED08

Symbol: SCB_VTOR
   Definitions
      At line 15 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvd
s.s
   Uses
      None
Comment: SCB_VTOR unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

rt_interrupt_from_thread 00000000

Symbol: rt_interrupt_from_thread
   Definitions
      At line 5 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvds
.s
   Uses
      At line 49 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvd
s.s
      At line 127 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rv
ds.s
      At line 173 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rv
ds.s

rt_interrupt_to_thread 00000000

Symbol: rt_interrupt_to_thread
   Definitions
      At line 6 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvds
.s
   Uses
      At line 45 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvd
s.s
      At line 132 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rv
ds.s
      At line 191 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rv
ds.s

rt_thread_switch_interrupt_flag 00000000

Symbol: rt_thread_switch_interrupt_flag
   Definitions
      At line 4 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvds
.s
   Uses
      At line 54 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rvd
s.s
      At line 119 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rv
ds.s
      At line 164 in file ..\Source\rtthread3.x\libcpu\arm\cortex-m3\context_rv
ds.s

3 symbols
352 symbols in table
